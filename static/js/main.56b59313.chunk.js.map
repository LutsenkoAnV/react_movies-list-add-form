{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","inputValid","titleInput","imgUrlInput","imdbUrlInput","imdbIdInput","urlValid","imgUrlValid","imdbUrlValid","submitUrlValid","imgUrlSubmit","imdbUrlSubmit","validateForm","event","id","target","matches","value","match","setState","handleChange","handleSubmit","preventDefault","newMovie","addMovie","props","this","urlDisable","Object","values","includes","disable","onSubmit","cx","form__label","onChange","onBlur","autoComplete","disabled","type","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"uyEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,4BCpBGK,G,MAAb,2MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRG,WAAY,CACVC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,aAAa,GAEfC,SAAU,CACRC,aAAa,EACbC,cAAc,GAEhBC,eAAgB,CACdC,cAAc,EACdC,eAAe,IAnBrB,EAuBEC,aAAe,SAACC,GAAW,IACjBC,EAAOD,EAAME,OAAbD,GADgB,EAUpB,EAAKd,MAPPhB,EAHsB,EAGtBA,MACAE,EAJsB,EAItBA,OACAC,EALsB,EAKtBA,QACAW,EANsB,EAMtBA,OACAG,EAPsB,EAOtBA,WACAK,EARsB,EAQtBA,SACAG,EATsB,EAStBA,eAIIO,EAAUH,EAAME,OAAOE,MAAMC,MADnB,uKAGhB,OAAQJ,GACN,IAAK,QACE9B,GACH,EAAKmC,SAAS,CACZlB,WAAY,CACVC,YAAY,EACZC,YAAaF,EAAWE,YACxBC,aAAcH,EAAWG,aACzBC,YAAaJ,EAAWI,eAK9B,MAEF,IAAK,SACEnB,GACH,EAAKiC,SAAS,CACZlB,WAAY,CACVC,WAAYD,EAAWC,WACvBC,aAAa,EACbC,aAAcH,EAAWG,aACzBC,YAAaJ,EAAWI,gBAKzBW,GAAW9B,GACd,EAAKiC,SAAS,CACZb,SAAU,CACRC,aAAa,EACbC,aAAcF,EAASE,gBAKzBQ,EACF,EAAKG,SAAS,CACZV,eAAgB,CACdC,cAAc,EACdC,cAAeF,EAAeE,iBAIlC,EAAKQ,SAAS,CACZV,eAAgB,CACdC,cAAc,EACdC,cAAeF,EAAeE,iBAKpC,MAEF,IAAK,UACExB,GACH,EAAKgC,SAAS,CACZlB,WAAY,CACVC,WAAYD,EAAWC,WACvBC,YAAaF,EAAWE,YACxBC,cAAc,EACdC,YAAaJ,EAAWI,gBAKzBW,GAAW7B,GACd,EAAKgC,SAAS,CACZb,SAAU,CACRC,YAAaD,EAASC,YACtBC,cAAc,KAKhBQ,EACF,EAAKG,SAAS,CACZV,eAAgB,CACdC,aAAcD,EAAeC,aAC7BC,eAAe,KAInB,EAAKQ,SAAS,CACZV,eAAgB,CACdC,aAAcD,EAAeC,aAC7BC,eAAe,KAKrB,MAEF,IAAK,SACEb,GACH,EAAKqB,SAAS,CACZlB,WAAY,CACVC,WAAYD,EAAWC,WACvBC,YAAaF,EAAWE,YACxBC,aAAcH,EAAWG,aACzBC,aAAa,OA1I3B,EAsJEe,aAAe,SAACP,GAAW,IAAD,EACFA,EAAME,OAApBD,EADgB,EAChBA,GAAIG,EADY,EACZA,MADY,EAES,EAAKjB,MAA9BC,EAFgB,EAEhBA,WAAYK,EAFI,EAEJA,SAEpB,OAAQQ,GACN,IAAK,QACH,EAAKK,SAAS,CACZnC,MAAOiC,EACPhB,WAAY,CACVC,YAAY,EACZC,YAAaF,EAAWE,YACxBC,aAAcH,EAAWG,aACzBC,YAAaJ,EAAWI,eAG5B,MAEF,IAAK,cACH,EAAKc,SAAS,CACZlC,YAAagC,IAEf,MAEF,IAAK,SACH,EAAKE,SAAS,CACZjC,OAAQ+B,EACRhB,WAAY,CACVC,WAAYD,EAAWC,WACvBC,aAAa,EACbC,aAAcH,EAAWG,aACzBC,YAAaJ,EAAWI,aAE1BC,SAAU,CACRC,aAAa,EACbC,aAAcF,EAASE,gBAG3B,MAEF,IAAK,UACH,EAAKW,SAAS,CACZhC,QAAS8B,EACThB,WAAY,CACVC,WAAYD,EAAWC,WACvBC,YAAaF,EAAWE,YACxBC,cAAc,EACdC,YAAaJ,EAAWI,aAE1BC,SAAU,CACRC,YAAaD,EAASC,YACtBC,cAAc,KAGlB,MAEF,IAAK,SACH,EAAKW,SAAS,CACZrB,OAAQmB,EACRhB,WAAY,CACVC,WAAYD,EAAWC,WACvBC,YAAaF,EAAWE,YACxBC,aAAcH,EAAWG,aACzBC,aAAa,OApNzB,EA8NEgB,aAAe,SAACR,GACdA,EAAMS,iBAEN,IAAMC,EAAQ,eAAQ,EAAKvB,QAG3BwB,EAFqB,EAAKC,MAAlBD,UAECD,GAET,EAAKJ,SAAS,CACZnC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MA3Od,wEA+OY,IAAD,EASH4B,KAAK1B,MAPPhB,EAFK,EAELA,MACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,OAAQC,EAJH,EAIGA,QACRW,EALK,EAKLA,OACAQ,EANK,EAMLA,SACAL,EAPK,EAOLA,WACAQ,EARK,EAQLA,eAEIkB,EAAaC,OAAOC,OAAOpB,GAAgBqB,UAAS,GACpDC,EAAU/C,GAASc,IAAW6B,EAEpC,OACE,0BAAMvC,UAAU,OAAO4C,SAAUN,KAAKL,cACpC,2BAAOjC,UAAW6C,IAAG,CACnBC,aAAa,EAAM,kBAAmBjC,EAAWC,cAGjD,qCACA,2BACEd,UAAU,cACV6B,MAAOjC,EACP8B,GAAG,QACHqB,SAAUT,KAAKN,aACfgB,OAAQV,KAAKd,aACbyB,aAAa,SAGjB,2BAAOjD,UAAU,eACf,2CACA,8BACEA,UAAU,iBACV6B,MAAOhC,EACP6B,GAAG,cACHqB,SAAUT,KAAKN,aACfiB,aAAa,SAGjB,2BAAOjD,UAAW6C,IAAG,CACnBC,aAAa,EACb,kBAAmBjC,EAAWE,YAC9B,sBAAuBG,EAASC,eAGhC,yCACA,2BACEnB,UAAU,cACV6B,MAAO/B,EACP4B,GAAG,SACHqB,SAAUT,KAAKN,aACfgB,OAAQV,KAAKd,aACbyB,aAAa,SAGjB,2BAAOjD,UAAW6C,IAAG,CACnBC,aAAa,EACb,kBAAmBjC,EAAWG,aAC9B,sBAAuBE,EAASE,gBAGhC,wCACA,2BACEpB,UAAU,cACV6B,MAAO9B,EACP2B,GAAG,UACHqB,SAAUT,KAAKN,aACfgB,OAAQV,KAAKd,aACbyB,aAAa,SAGjB,2BAAOjD,UAAW6C,IAAG,CACnBC,aAAa,EAAM,kBAAmBjC,EAAWI,eAGjD,uCACA,2BACEjB,UAAU,cACV6B,MAAOnB,EACPgB,GAAG,SACHqB,SAAUT,KAAKN,aACfgB,OAAQV,KAAKd,aACbyB,aAAa,SAGjB,4BAAQC,UAAWP,EAASQ,KAAK,SAASnD,UAAU,gBAApD,YApUR,GAA8BoD,c,OCAjBC,EAAb,2MACEzC,MAAQ,CACNN,OAAQgD,GAFZ,EAKElB,SAAW,SAAC5B,GACV,EAAKuB,UAAS,SAAAwB,GAAS,MAAK,CAC1BjD,OAAO,GAAD,mBAAMiD,EAAUjD,QAAhB,CAAwBE,SAPpC,wEAWY,IACAF,EAAWgC,KAAK1B,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUoC,SAAUE,KAAKF,iBApBnC,GAAyBgB,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.56b59313.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    inputValid: {\n      titleInput: false,\n      imgUrlInput: false,\n      imdbUrlInput: false,\n      imdbIdInput: false,\n    },\n    urlValid: {\n      imgUrlValid: false,\n      imdbUrlValid: false,\n    },\n    submitUrlValid: {\n      imgUrlSubmit: false,\n      imdbUrlSubmit: false,\n    },\n  };\n\n  validateForm = (event) => {\n    const { id } = event.target;\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      inputValid,\n      urlValid,\n      submitUrlValid,\n    } = this.state;\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/g;\n    const matches = event.target.value.match(pattern);\n\n    switch (id) {\n      case 'title':\n        if (!title) {\n          this.setState({\n            inputValid: {\n              titleInput: true,\n              imgUrlInput: inputValid.imgUrlInput,\n              imdbUrlInput: inputValid.imdbUrlInput,\n              imdbIdInput: inputValid.imdbIdInput,\n            },\n          });\n        }\n\n        break;\n\n      case 'imgUrl':\n        if (!imgUrl) {\n          this.setState({\n            inputValid: {\n              titleInput: inputValid.titleInput,\n              imgUrlInput: true,\n              imdbUrlInput: inputValid.imdbUrlInput,\n              imdbIdInput: inputValid.imdbIdInput,\n            },\n          });\n        }\n\n        if (!matches && imgUrl) {\n          this.setState({\n            urlValid: {\n              imgUrlValid: true,\n              imdbUrlValid: urlValid.imdbUrlValid,\n            },\n          });\n        }\n\n        if (matches) {\n          this.setState({\n            submitUrlValid: {\n              imgUrlSubmit: true,\n              imdbUrlSubmit: submitUrlValid.imdbUrlSubmit,\n            },\n          });\n        } else {\n          this.setState({\n            submitUrlValid: {\n              imgUrlSubmit: false,\n              imdbUrlSubmit: submitUrlValid.imdbUrlSubmit,\n            },\n          });\n        }\n\n        break;\n\n      case 'imdbUrl':\n        if (!imdbUrl) {\n          this.setState({\n            inputValid: {\n              titleInput: inputValid.titleInput,\n              imgUrlInput: inputValid.imgUrlInput,\n              imdbUrlInput: true,\n              imdbIdInput: inputValid.imdbIdInput,\n            },\n          });\n        }\n\n        if (!matches && imdbUrl) {\n          this.setState({\n            urlValid: {\n              imgUrlValid: urlValid.imgUrlValid,\n              imdbUrlValid: true,\n            },\n          });\n        }\n\n        if (matches) {\n          this.setState({\n            submitUrlValid: {\n              imgUrlSubmit: submitUrlValid.imgUrlSubmit,\n              imdbUrlSubmit: true,\n            },\n          });\n        } else {\n          this.setState({\n            submitUrlValid: {\n              imgUrlSubmit: submitUrlValid.imgUrlSubmit,\n              imdbUrlSubmit: false,\n            },\n          });\n        }\n\n        break;\n\n      case 'imdbId':\n        if (!imdbId) {\n          this.setState({\n            inputValid: {\n              titleInput: inputValid.titleInput,\n              imgUrlInput: inputValid.imgUrlInput,\n              imdbUrlInput: inputValid.imdbUrlInput,\n              imdbIdInput: true,\n            },\n          });\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  handleChange = (event) => {\n    const { id, value } = event.target;\n    const { inputValid, urlValid } = this.state;\n\n    switch (id) {\n      case 'title':\n        this.setState({\n          title: value,\n          inputValid: {\n            titleInput: false,\n            imgUrlInput: inputValid.imgUrlInput,\n            imdbUrlInput: inputValid.imdbUrlInput,\n            imdbIdInput: inputValid.imdbIdInput,\n          },\n        });\n        break;\n\n      case 'description':\n        this.setState({\n          description: value,\n        });\n        break;\n\n      case 'imgUrl':\n        this.setState({\n          imgUrl: value,\n          inputValid: {\n            titleInput: inputValid.titleInput,\n            imgUrlInput: false,\n            imdbUrlInput: inputValid.imdbUrlInput,\n            imdbIdInput: inputValid.imdbIdInput,\n          },\n          urlValid: {\n            imgUrlValid: false,\n            imdbUrlValid: urlValid.imdbUrlValid,\n          },\n        });\n        break;\n\n      case 'imdbUrl':\n        this.setState({\n          imdbUrl: value,\n          inputValid: {\n            titleInput: inputValid.titleInput,\n            imgUrlInput: inputValid.imgUrlInput,\n            imdbUrlInput: false,\n            imdbIdInput: inputValid.imdbIdInput,\n          },\n          urlValid: {\n            imgUrlValid: urlValid.imgUrlValid,\n            imdbUrlValid: false,\n          },\n        });\n        break;\n\n      case 'imdbId':\n        this.setState({\n          imdbId: value,\n          inputValid: {\n            titleInput: inputValid.titleInput,\n            imgUrlInput: inputValid.imgUrlInput,\n            imdbUrlInput: inputValid.imdbUrlInput,\n            imdbIdInput: false,\n          },\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newMovie = { ...this.state };\n    const { addMovie } = this.props;\n\n    addMovie(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl, imdbUrl,\n      imdbId,\n      urlValid,\n      inputValid,\n      submitUrlValid,\n    } = this.state;\n    const urlDisable = Object.values(submitUrlValid).includes(false);\n    const disable = title && imdbId && !urlDisable;\n\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label className={cx({\n          form__label: true, 'form__not-valid': inputValid.titleInput,\n        })}\n        >\n          <p>Title:</p>\n          <input\n            className=\"form__input\"\n            value={title}\n            id=\"title\"\n            onChange={this.handleChange}\n            onBlur={this.validateForm}\n            autoComplete=\"off\"\n          />\n        </label>\n        <label className=\"form__label\">\n          <p>Description:</p>\n          <textarea\n            className=\"form__textarea\"\n            value={description}\n            id=\"description\"\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n          />\n        </label>\n        <label className={cx({\n          form__label: true,\n          'form__not-valid': inputValid.imgUrlInput,\n          'form__url-not-valid': urlValid.imgUrlValid,\n        })}\n        >\n          <p>Image Url:</p>\n          <input\n            className=\"form__input\"\n            value={imgUrl}\n            id=\"imgUrl\"\n            onChange={this.handleChange}\n            onBlur={this.validateForm}\n            autoComplete=\"off\"\n          />\n        </label>\n        <label className={cx({\n          form__label: true,\n          'form__not-valid': inputValid.imdbUrlInput,\n          'form__url-not-valid': urlValid.imdbUrlValid,\n        })}\n        >\n          <p>IMDb Url:</p>\n          <input\n            className=\"form__input\"\n            value={imdbUrl}\n            id=\"imdbUrl\"\n            onChange={this.handleChange}\n            onBlur={this.validateForm}\n            autoComplete=\"off\"\n          />\n        </label>\n        <label className={cx({\n          form__label: true, 'form__not-valid': inputValid.imdbIdInput,\n        })}\n        >\n          <p>IMDb id:</p>\n          <input\n            className=\"form__input\"\n            value={imdbId}\n            id=\"imdbId\"\n            onChange={this.handleChange}\n            onBlur={this.validateForm}\n            autoComplete=\"off\"\n          />\n        </label>\n        <button disabled={!disable} type=\"submit\" className=\"form__button\">\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}