{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/TitleInput.js","components/NewMovie/ImageUrlInput.js","components/NewMovie/ImdbUrlInput.js","components/NewMovie/ImdbIdInput.js","components/NewMovie/TextareaInput.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","TitleInput","state","isValid","validateForm","event","props","setState","inputChange","onChange","this","cx","form__label","value","id","onBlur","autoComplete","Component","ImageUrlInput","isUrlValid","formValidate","matches","target","match","ImdbUrlInput","ImdbIdInput","TextareaInput","NewMovie","urlValid","imgUrlValid","imdbUrlValid","formValid","imdbIdValid","handleChange","titleValid","handleSubmit","preventDefault","newMovie","addMovie","urlDisable","Object","values","includes","disable","onSubmit","disabled","type","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf709398.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nexport class TitleInput extends Component {\n  state = {\n    isValid: false,\n  }\n\n  validateForm = (event) => {\n    const { title } = this.props;\n\n    if (!title) {\n      this.setState({\n        isValid: true,\n      });\n    }\n  }\n\n  inputChange = (event) => {\n    const { onChange } = this.props;\n\n    onChange(event);\n\n    this.setState({\n      isValid: false,\n    });\n  }\n\n  render() {\n    const { title } = this.props;\n    const { isValid } = this.state;\n\n    return (\n      <label className={cx({\n        form__label: true, 'form__not-valid': isValid,\n      })}\n      >\n        <p>Title:</p>\n        <input\n          className=\"form__input\"\n          value={title}\n          id=\"title\"\n          onChange={this.inputChange}\n          onBlur={this.validateForm}\n          autoComplete=\"off\"\n        />\n      </label>\n    );\n  }\n}\n\nTitleInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nexport class ImageUrlInput extends Component {\n  state = {\n    isValid: false,\n    isUrlValid: false,\n  }\n\n  validateForm = (event) => {\n    const { imgUrl, formValidate } = this.props;\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/g;\n    const matches = event.target.value.match(pattern);\n\n    if (!imgUrl) {\n      this.setState({\n        isValid: true,\n      });\n    }\n\n    if (!matches && imgUrl) {\n      this.setState({\n        isUrlValid: true,\n      });\n    }\n\n    if (matches) {\n      formValidate(event, true);\n    } else {\n      formValidate(event, false);\n    }\n  }\n\n  inputChange = (event) => {\n    const { onChange } = this.props;\n\n    onChange(event);\n\n    this.setState({\n      isValid: false,\n      isUrlValid: false,\n    });\n  }\n\n  render() {\n    const { imgUrl } = this.props;\n    const { isValid, isUrlValid } = this.state;\n\n    return (\n      <label className={cx({\n        form__label: true,\n        'form__not-valid': isValid,\n        'form__url-not-valid': isUrlValid,\n      })}\n      >\n        <p>Image Url:</p>\n        <input\n          className=\"form__input\"\n          value={imgUrl}\n          id=\"imgUrl\"\n          onChange={this.inputChange}\n          onBlur={this.validateForm}\n          autoComplete=\"off\"\n        />\n      </label>\n    );\n  }\n}\n\nImageUrlInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  formValidate: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nexport class ImdbUrlInput extends Component {\n  state = {\n    isValid: false,\n    isUrlValid: false,\n  }\n\n  validateForm = (event) => {\n    const { imdbUrl, formValidate } = this.props;\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/g;\n    const matches = event.target.value.match(pattern);\n\n    if (!imdbUrl) {\n      this.setState({\n        isValid: true,\n      });\n    }\n\n    if (!matches && imdbUrl) {\n      this.setState({\n        isUrlValid: true,\n      });\n    }\n\n    if (matches) {\n      formValidate(event, true);\n    } else {\n      formValidate(event, false);\n    }\n  }\n\n  inputChange = (event) => {\n    const { onChange } = this.props;\n\n    onChange(event);\n\n    this.setState({\n      isValid: false,\n      isUrlValid: false,\n    });\n  }\n\n  render() {\n    const { imdbUrl } = this.props;\n    const { isValid, isUrlValid } = this.state;\n\n    return (\n      <label className={cx({\n        form__label: true,\n        'form__not-valid': isValid,\n        'form__url-not-valid': isUrlValid,\n      })}\n      >\n        <p>IMDb Url:</p>\n        <input\n          className=\"form__input\"\n          value={imdbUrl}\n          id=\"imdbUrl\"\n          onChange={this.inputChange}\n          onBlur={this.validateForm}\n          autoComplete=\"off\"\n        />\n      </label>\n    );\n  }\n}\n\nImdbUrlInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n  formValidate: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nexport class ImdbIdInput extends Component {\n  state = {\n    isValid: false,\n  }\n\n  validateForm = () => {\n    const { imdbId } = this.props;\n\n    if (!imdbId) {\n      this.setState({\n        isValid: true,\n      });\n    }\n  }\n\n  inputChange = (event) => {\n    const { onChange } = this.props;\n\n    onChange(event);\n\n    this.setState({\n      isValid: false,\n    });\n  }\n\n  render() {\n    const { imdbId } = this.props;\n    const { isValid } = this.state;\n\n    return (\n      <label className={cx({\n        form__label: true, 'form__not-valid': isValid,\n      })}\n      >\n        <p>IMDb id:</p>\n        <input\n          className=\"form__input\"\n          value={imdbId}\n          id=\"imdbId\"\n          onChange={this.inputChange}\n          onBlur={this.validateForm}\n          autoComplete=\"off\"\n        />\n      </label>\n    );\n  }\n}\n\nImdbIdInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  imdbId: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TextareaInput = ({ onChange, description }) => (\n  <label className=\"form__label\">\n    <p>Description:</p>\n    <textarea\n      className=\"form__textarea\"\n      value={description}\n      id=\"description\"\n      onChange={onChange}\n      autoComplete=\"off\"\n    />\n  </label>\n);\n\nTextareaInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  description: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TitleInput } from './TitleInput';\nimport { ImageUrlInput } from './ImageUrlInput';\nimport { ImdbUrlInput } from './ImdbUrlInput';\nimport { ImdbIdInput } from './ImdbIdInput';\nimport { TextareaInput } from './TextareaInput';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    urlValid: {\n      imgUrlValid: false,\n      imdbUrlValid: false,\n    },\n  };\n\n  formValidate = (event, formValid) => {\n    const { id } = event.target;\n    const { urlValid } = this.state;\n\n    switch (id) {\n      case 'imgUrl':\n        this.setState({\n          urlValid: {\n            imgUrlValid: formValid,\n            imdbIdValid: urlValid.imdbUrlValid,\n          },\n        });\n        break;\n\n      case 'imdbUrl':\n        this.setState({\n          urlValid: {\n            imgUrlValid: urlValid.imgUrlValid,\n            imdbIdValid: formValid,\n          },\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  handleChange = (event, formValid) => {\n    const { id, value } = event.target;\n\n    switch (id) {\n      case 'title':\n        this.setState({\n          title: value,\n          isValid: { titleValid: formValid },\n        });\n        break;\n\n      case 'description':\n        this.setState({\n          description: value,\n        });\n        break;\n\n      case 'imgUrl':\n        this.setState({\n          imgUrl: value,\n          isValid: { imgUrlValid: formValid },\n        });\n        break;\n\n      case 'imdbUrl':\n        this.setState({\n          imdbUrl: value,\n          isValid: { imdbIdValid: formValid },\n        });\n        break;\n\n      case 'imdbId':\n        this.setState({\n          imdbId: value,\n          isValid: { imdbIdValid: formValid },\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newMovie = { ...this.state };\n    const { addMovie } = this.props;\n\n    addMovie(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl, imdbUrl,\n      imdbId,\n      urlValid,\n    } = this.state;\n    const urlDisable = Object.values(urlValid).includes(false);\n    const disable = title && imdbId && !urlDisable;\n\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <TitleInput onChange={this.handleChange} title={title} />\n        <TextareaInput onChange={this.handleChange} description={description} />\n        <ImageUrlInput\n          onChange={this.handleChange}\n          imgUrl={imgUrl}\n          formValidate={this.formValidate}\n        />\n        <ImdbUrlInput\n          onChange={this.handleChange}\n          imdbUrl={imdbUrl}\n          formValidate={this.formValidate}\n        />\n        <ImdbIdInput onChange={this.handleChange} imdbId={imdbId} />\n        <button disabled={!disable} type=\"submit\" className=\"form__button\">\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = movie;\n\n    this.setState(prevState => ({\n      movies: [...prevState.movies, {\n        title, description, imgUrl, imdbUrl, imdbId,\n      }],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}